# Specify version format
version: "{build}"

# Operating system (build VM template)
os: Visual Studio 2015

configuration:
  - Release

# build platform, i.e. Win32 (instead of x86), x64, Any CPU. This setting is optional.
platform:
  - x64

# specify custom environment variables
environment:
  MSVC_DEFAULT_OPTIONS: ON
  BOOST_ROOT: C:\Libraries\boost_1_60_0
  BOOST_LIBRARYDIR: C:\Libraries\boost_1_60_0\lib64-msvc-14.0
  PYTHON_VERSION: 2.7
  MINICONDA: C:\Miniconda-x64
  PROTOC: C:\projects\bigartm\build\bin\Release\protoc.exe
  ARTM_SHARED_LIBRARY: C:\projects\bigartm\build\bin\Release\artm.dll
  BIGARTM_UNITTEST_DATA: C:\projects\bigartm\test_data

# scripts that are called at very beginning, before repo cloning
init:
  - cmd: cmake --version
  - cmd: msbuild /version

# https://www.appveyor.com/blog/2014/06/04/shallow-clone-for-git-repositories
shallow_clone: true

# clone directory
clone_folder: C:\projects\bigartm

install:
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda install numpy pandas

# scripts to run before build
before_build:
  - cmd: cd C:\projects\bigartm
  - cmd: md build
  - cmd: cd build
  - cmd: if "%platform%"=="Win32" set CMAKE_GENERATOR_NAME=Visual Studio 14 2015
  - cmd: if "%platform%"=="x64"   set CMAKE_GENERATOR_NAME=Visual Studio 14 2015 Win64
  - cmd: cmake -G "%CMAKE_GENERATOR_NAME%" -DCMAKE_BUILD_TYPE=%configuration% -DBOOST_ROOT="%BOOST_ROOT%" -DBOOST_LIBRARYDIR="%BOOST_LIBRARYDIR%" ..

build:
  project: C:\projects\bigartm\build\bigartm.sln    # path to Visual Studio solution or project
  parallel: true                                    # enable MSBuild parallel builds
  verbosity: normal                                 # MSBuild verbosity level (quiet|minimal|normal|detailed)

after_build:
  - cmd: cd C:\projects\bigartm\python
  - cmd: python setup.py install

before_test:
  - cmd: cd %BIGARTM_UNITTEST_DATA%
  - ps: Start-FileDownload 'https://s3-eu-west-1.amazonaws.com/artm/docword.kos.txt'
  - ps: Start-FileDownload 'https://s3-eu-west-1.amazonaws.com/artm/vocab.kos.txt'

test_script:
  - cmd: cd C:\projects\bigartm\build\bin\Release
  - cmd: artm_tests.exe
  - cmd: cd C:\projects\bigartm\python\tests
  - cmd: py.test

# Enable RDP connection to test server as described here: http://www.appveyor.com/docs/how-to/rdp-to-build-worker
on_finish:
- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
