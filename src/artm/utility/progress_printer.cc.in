// Copyright 2016, Additive Regularization of Topic Models.

#include <artm/utility/progress_printer.h>

#cmakedefine HAVE_UNISTD_H

#ifdef HAVE_UNISTD_H
#include <unistd.h>
#elif defined(_WIN32) || defined(WIN32)
#include <io.h>
#else
#error Your operating system is not supported
#endif

#include <cstdio>

namespace artm {
namespace utility {

ProgressPrinter::ProgressPrinter(size_t max) noexcept : max_(max), pos_(0) {
  if (!isatty(fileno(stderr))) {  // disable in non-interactive mode
    max_ = 0;
  }
  #ifdef _WIN32
  // Windows terminal does not support ANSI codes until 10
  // http://superuser.com/a/1105718
  // TODO(v.markovtsev): activate ANSI for Windows 10 via SetConsoleMode()
  max_ = 0;
  #endif
}

void ProgressPrinter::Add(int delta) noexcept {
  size_t npos = pos_ + delta;
  if (npos < pos_ && delta > 0) {  // max range overflow
    npos = max_;
  } else if (npos > pos_ && delta < 0) {  // zero overflow
    npos = 0;
  }
  Set(npos);
}

void ProgressPrinter::Set(size_t pos) noexcept {
  if (max_ == 0) {
    return;  // no-op, progress is disabled
  }
  int prevpct = static_cast<int>((pos_ * 100) / max_);
  pos_ = pos > max_? max_ : pos;
  int pct = static_cast<int>((pos_ * 100) / max_);
  if (pct != prevpct) {
    // ANSI code \033[<N>D moves cursor to N positions backwards
    fprintf(stderr, " %3d%%\033[5D", pct);
    fflush(stderr);
  }
}

}  // namespace utility
}  // namespace artm
