package artm.core;

import "artm/messages.proto";

// Mask message is similar to std::vector<bool>
message Mask {
  repeated bool value = 1 [packed = true];
}

message DataLoaderCacheEntry {
  optional string model_name = 1;
  optional string batch_uuid = 2;
  repeated int32 item_id = 3;
  repeated FloatArray theta = 4;
  repeated string topic_name = 5;

  // If filename is set then this DataLoaderCacheEntry is incomplete
  // ('theta' field is missing). Full message can be loaded from 'filename' file.
  optional string filename = 6;

  repeated string item_title = 7;
}

// A message containing all data to transfer from DataLoader to Processor
message ProcessorInput
{
  required Batch batch = 1;

  // Identificator of the batch
  required string batch_uuid = 2;

  // Information about streams (for example, training and testing items).
  // Withing each stream the length of flags vector
  // is the same as number of items in the batch.
  repeated Mask stream_mask = 4;
  repeated string stream_name = 5;

  // Contains information about theta matrix on previous iteration.
  repeated DataLoaderCacheEntry cached_theta = 6;
}

// All information, gathered by Processor for a particular batch and model.
message ModelIncrement {
  optional TopicModel topic_model = 1;

  repeated string score_name = 8;
  repeated bytes score = 9;

  // Cached thetas from previous iteration
  repeated DataLoaderCacheEntry cache = 10;

  // Identificators of all batches, contributing to this model increment.
  repeated string batch_uuid = 11;
}
